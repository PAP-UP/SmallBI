package br.com.smallbi.entity;

import java.util.Calendar;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.ForeignKey;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.br.CNPJ;

@Entity
public class Empresa {

	@Id
	@SequenceGenerator(name="seq_empresa", sequenceName="seq_empresa_id", allocationSize=1)
	@GeneratedValue(generator="seq_empresa", strategy=GenerationType.SEQUENCE)
	private Integer idEmpresa;
	
	@NotNull(message="Hibernate Validator: A dataCadastro não pode ser null!")
	@Column(name="dataCadastro", nullable=false)
	private Calendar dataCadastro;
	
	@NotNull(message="Hibernate Validator: O usuarioId não pode ser null!")
	@Column(name="usuarioId", nullable=false)
	private Integer usuarioId;
	
	@Length(max=30, message="Hibernate Validator: A razaoSocial não pode conter mais de {max} caracteres!")
	@NotBlank(message="Hibernate Validator: A razaoSocial não pode estar em branco!")
	@NotNull(message="Hibernate Validator: A razaoSocial não pode ser null!")
	@Column(name="razaoSocial", nullable=false, length=30)
	private String razaoSocial;
	
	@Length(max=30, message="Hibernate Validator: O nomeFantasia não pode conter mais de {max} caracteres!")
	@NotBlank(message="Hibernate Validator: O nomeFantasia não pode estar em branco!")
	@NotNull(message="Hibernate Validator: O nomeFantasia não pode ser null!")
	@Column(name="nomeFantasia", nullable=false, length=30)
	private String nomeFantasia;
	
	@CNPJ
	@NotNull(message="Hibernate Validator: O cnpj não pode ser null!")
	@Column(name="cnpj", nullable=false)
	private String cnpj;
	
	@Length(max=30, message="Hibernate Validator: O ie não pode conter mais de {max} caracteres!")
	@NotBlank(message="Hibernate Validator: O ie não pode estar em branco!")
	@NotNull(message="Hibernate Validator: O ie não pode ser null!")
	@Column(name="ie", nullable=false, length=30)
	private String ie;
	
	@OneToOne
	@JoinColumn(name="endereco", referencedColumnName="idEndereco", nullable=false)
	@ForeignKey(name="fk_endereco")
	private Endereco endereco;
	
	@ManyToOne
	@JoinColumn(name="ramoAtividade", referencedColumnName="idRamoAtividade", nullable=false)
	@ForeignKey(name="fk_ramoAtividade")
	private RamoAtividade ramoAtividade;
	
	@NotNull(message="Hibernate Validator: O tamanhoTotal não pode ser null!")
	@Column(name="tamanhoTotal", nullable=false)
	private int tamanhoTotal;
	
	@ManyToOne
	@JoinColumn(name="formaPagamento", referencedColumnName="idFormaPagamento", nullable=false)
	@ForeignKey(name="fk_formaPagamento")
	private FormaPagamento formaPagamento;
	
	@ManyToOne
	@JoinColumn(name="plano", referencedColumnName="idPlano", nullable=false)
	@ForeignKey(name="fk_plano")
	private Plano plano;

	public Integer getIdEmpresa() {
		return idEmpresa;
	}

	public void setIdEmpresa(Integer idEmpresa) {
		this.idEmpresa = idEmpresa;
	}

	public Calendar getDataCadastro() {
		return dataCadastro;
	}

	public void setDataCadastro(Calendar dataCadastro) {
		this.dataCadastro = dataCadastro;
	}

	public Integer getUsuarioId() {
		return usuarioId;
	}

	public void setUsuarioId(Integer usuarioId) {
		this.usuarioId = usuarioId;
	}

	public String getRazaoSocial() {
		return razaoSocial;
	}

	public void setRazaoSocial(String razaoSocial) {
		this.razaoSocial = razaoSocial;
	}

	public String getNomeFantasia() {
		return nomeFantasia;
	}

	public void setNomeFantasia(String nomeFantasia) {
		this.nomeFantasia = nomeFantasia;
	}

	public String getCnpj() {
		return cnpj;
	}

	public void setCnpj(String cnpj) {
		this.cnpj = cnpj;
	}

	public String getIe() {
		return ie;
	}

	public void setIe(String ie) {
		this.ie = ie;
	}

	public Endereco getEndereco() {
		return endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

	public RamoAtividade getRamoAtividade() {
		return ramoAtividade;
	}

	public void setRamoAtividade(RamoAtividade ramoAtividade) {
		this.ramoAtividade = ramoAtividade;
	}

	public int getTamanhoTotal() {
		return tamanhoTotal;
	}

	public void setTamanhoTotal(int tamanhoTotal) {
		this.tamanhoTotal = tamanhoTotal;
	}

	public FormaPagamento getFormaPagamento() {
		return formaPagamento;
	}

	public void setFormaPagamento(FormaPagamento formaPagamento) {
		this.formaPagamento = formaPagamento;
	}

	public Plano getPlano() {
		return plano;
	}

	public void setPlano(Plano plano) {
		this.plano = plano;
	}
	

	
	
	
}
