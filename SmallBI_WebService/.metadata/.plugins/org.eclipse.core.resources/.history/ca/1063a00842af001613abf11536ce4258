package entity;

import java.util.Calendar;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotBlank;

@Entity
public class Empresa {

	@Id
	@SequenceGenerator(name="seq_empresa", sequenceName="seq_empresa_id", allocationSize=1)
	@GeneratedValue(generator="seq_empresa", strategy=GenerationType.SEQUENCE)
	private Integer idEmpresa;
	
	@NotNull(message="Hibernate Validator: A dataCadastro não pode ser null!")
	@Column(name="dataCadastro", nullable=false)
	private Calendar dataCadastro;
	
	@NotNull(message="Hibernate Validator: O usuario não pode ser null!")
	@Column(name="usuario", nullable=false)
	private Usuario usuario;
	
	@Length(max=30, message="Hibernate Validator: A razaoSocial não pode conter mais de {max} caracteres!")
	@NotBlank(message="Hibernate Validator: A razaoSocial não pode estar em branco!")
	@NotNull(message="Hibernate Validator: A razaoSocial não pode ser null!")
	@Column(name="razaoSocial", nullable=false, length=30)
	private String razaoSocial;
	
	@Length(max=30, message="Hibernate Validator: O nomeFantasia não pode conter mais de {max} caracteres!")
	@NotBlank(message="Hibernate Validator: O nomeFantasia não pode estar em branco!")
	@NotNull(message="Hibernate Validator: O nomeFantasia não pode ser null!")
	@Column(name="nomeFantasia", nullable=false, length=30)
	private String nomeFantasia;
	
	
	private String cnpj;
	
	@Length(max=30, message="Hibernate Validator: O ie não pode conter mais de {max} caracteres!")
	@NotBlank(message="Hibernate Validator: O ie não pode estar em branco!")
	@NotNull(message="Hibernate Validator: O ie não pode ser null!")
	@Column(name="ie", nullable=false, length=30)
	private String ie;
	
	private Endereco endereco;
	
	private RamoAtividade ramoAtividade;
	
	private int tamanhoTotal;
	
	private FormaPagamento formaPagamento;
	
	private Plano plano;
}
