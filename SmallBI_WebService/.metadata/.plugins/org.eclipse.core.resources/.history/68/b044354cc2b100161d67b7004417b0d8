package br.com.smallbi.entity;

import java.util.Calendar;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.ForeignKey;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotBlank;

@Entity
public class Telefone {
	
	@Id
	@SequenceGenerator(name="seq_telefone", sequenceName="seq_telefone_id", allocationSize=1)
	@GeneratedValue(generator="seq_telefone", strategy=GenerationType.SEQUENCE)
	private Integer idTelefone;
	
	@NotNull(message="Hibernate Validator: A dataCadastro não pode ser null!")
	@Column(name="dataCadastro", nullable=false)
	private Calendar dataCadastro;
	
	@ManyToOne
	@JoinColumn(name="usuario", referencedColumnName="idUsuario", nullable=false)
	@ForeignKey(name="fk_usuario")
	private Usuario usuario;
	
	@ManyToOne
	@JoinColumn(name="tipo", referencedColumnName="idTipo", nullable=false)
	@ForeignKey(name="fk_tipo")
	private Tipo tipo;
	
	@Length(max=2, message="Hibernate Validator: O ddd não pode conter mais de {max} caracteres!")
	@NotBlank(message="Hibernate Validator: O ddd não pode estar em branco!")
	@NotNull(message="Hibernate Validator: O ddd não pode ser null!")
	@Column(name="ddd", nullable=false, length=2)
	private String ddd;
	
	@Length(max=10, message="Hibernate Validator: O telefone não pode conter mais de {max} caracteres!")
	@NotBlank(message="Hibernate Validator: O telefone não pode estar em branco!")
	@NotNull(message="Hibernate Validator: O telefone não pode ser null!")
	@Column(name="ddd", nullable=false, length=10)
	private String telefone;
	
	@OneToOne
	@JoinColumn(name="empresa", referencedColumnName="idEmpresa", nullable=false)
	@ForeignKey(name="fk_empresa")
	private Empresa empresa;
	
	@ManyToOne
	@JoinColumn(name="pessoa", referencedColumnName="idPessoa", nullable=false)
	@ForeignKey(name="fk_pessoa")
	private Pessoa pessoa;

	public Integer getIdTelefone() {
		return idTelefone;
	}

	public void setIdTelefone(Integer idTelefone) {
		this.idTelefone = idTelefone;
	}

	public Calendar getDataCadastro() {
		return dataCadastro;
	}

	public void setDataCadastro(Calendar dataCadastro) {
		this.dataCadastro = dataCadastro;
	}

	public Usuario getUsuario() {
		return usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	public Tipo getTipo() {
		return tipo;
	}

	public void setTipo(Tipo tipo) {
		this.tipo = tipo;
	}

	public String getDdd() {
		return ddd;
	}

	public void setDdd(String ddd) {
		this.ddd = ddd;
	}

	public String getTelefone() {
		return telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	public Empresa getEmpresa() {
		return empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}
	
	
}
