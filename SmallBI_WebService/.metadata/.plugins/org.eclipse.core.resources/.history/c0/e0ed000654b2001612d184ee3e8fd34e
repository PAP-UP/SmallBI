package br.com.smallbi.business;

import java.util.List;

import br.com.smallbi.business.exception.BusinessException;
import br.com.smallbi.business.interfaceBusiness.InterfaceBusiness;
import br.com.smallbi.dal.factory.FactoryDao;
import br.com.smallbi.dal.interfaceDal.InterfaceDao;
import br.com.smallbi.entity.Empresa;
import br.com.smallbi.entity.Usuario;

public class UsuarioBusiness implements InterfaceBusiness<Usuario>{

	InterfaceDao<Usuario> usuarioDao = FactoryDao.createUsuarioDao();
	InterfaceDao<Empresa> empresaDao = FactoryDao.createEmpresaDao();
	
	@Override
	public void create(Usuario t) throws BusinessException {
		
		if(t.getDataCadastro() == null){
			throw new BusinessException("A variável 'dataCadastro' deve ser informada!");
		}
		if(t.getEmpresa() == null){
			throw new BusinessException("A variável 'empresa' deve ser informada!");
		}
		if(t.getIdUsuario() == null){
			throw new BusinessException("A variável 'idUsuario' deve ser informada!");
		}
		if(t.getLogin().equals(null)|| t.getLogin().equals("")){
			throw new BusinessException("A variável 'login' deve ser informada!");
		}
		if(t.getPerfil() == null){
			throw new BusinessException("A variável 'perfil' deve ser informada!");
		}
		if(t.getPessoa() == null){
			throw new BusinessException("A variável 'pessoa' deve ser informada!");
		}
		if(t.getSenha().equals(null) || t.getSenha().equals("")){
			throw new BusinessException("A variável 'senha' deve ser informada!");
		}
		if(t.getUsuarioId().equals(null)){
			throw new BusinessException("A variável 'usuarioId' deve ser informada!");
		}
		if(t.getUsuarioSaiku().equals(null) || t.getUsuarioSaiku().equals("")){
			throw new BusinessException("A variável 'usuarioSaiku' deve ser informada!");
		}	
		
		usuarioDao.create(t);
	}

	@Override
	public List<Usuario> list() {
		return usuarioDao.list();
	}

	@Override
	public void update(Usuario t) throws BusinessException {
		if(t.getDataCadastro() == null){
			throw new BusinessException("A variável 'dataCadastro' deve ser informada!");
		}
		Empresa empresa = 
		if(t.getEmpresa() == null){
			throw new BusinessException("A variável 'empresa' deve ser informada!");
		}
		if(t.getIdUsuario() == null){
			throw new BusinessException("A variável 'idUsuario' deve ser informada!");
		}
		if(t.getLogin().equals(null)|| t.getLogin().equals("")){
			throw new BusinessException("A variável 'login' deve ser informada!");
		}
		if(t.getPerfil() == null){
			throw new BusinessException("A variável 'perfil' deve ser informada!");
		}
		if(t.getPessoa() == null){
			throw new BusinessException("A variável 'pessoa' deve ser informada!");
		}
		if(t.getSenha().equals(null) || t.getSenha().equals("")){
			throw new BusinessException("A variável 'senha' deve ser informada!");
		}
		if(t.getUsuarioId().equals(null)){
			throw new BusinessException("A variável 'usuarioId' deve ser informada!");
		}
		if(t.getUsuarioSaiku().equals(null) || t.getUsuarioSaiku().equals("")){
			throw new BusinessException("A variável 'usuarioSaiku' deve ser informada!");
		}	
		usuarioDao.update(t);
	}

	@Override
	public void delete(Integer t) throws BusinessException {
		Usuario usuario = new Usuario();
		usuario.setIdUsuario(t);
		usuarioDao.delete(usuario);
	}

	@Override
	public Usuario getObjById(Integer id) throws BusinessException {
		return usuarioDao.getObjById(id);
	}

	
}
